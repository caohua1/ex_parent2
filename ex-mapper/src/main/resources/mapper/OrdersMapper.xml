<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ex.dao.OrdersDao">

	<!--&lt;!&ndash;查询某商家下的所有下订单的用户的订单信息&ndash;&gt;
	<select id="selectOrdersByMerchantId" parameterType="Long" resultType="com.ex.entity.Orders">
      select * from orders o
      left join productinfo_manage pm on pm.id = o.productInfoId
	</select>
	private String nickName;//昵称
    private String headUrl;//头像-->

	<!--商家app首页的客户管理，根据merchantId查询购买过此商家商品的客户的信息（去重，一个用户在此商家有多个订单）(消费金额)，几笔待发货-->
	<select id="selectUserByMerchantId" parameterType="Long" resultType="com.ex.vo.OrderVo">
		select DISTINCT(upd.registUserId),upd.headUrl,upd.nickName,os.* from productinfo_manage pm
		left join orders os on os.productInfoId = pm.id
		left join user_order uo on uo.orderId = os.id
		left join userapp_person_data upd on upd.registUserId = uo.registUserId
		where pm.merchantId = #{merchantId}
		order by upd.registUserId
	</select>

	<select id="selectUserByMerchantIdCount" parameterType="Long" resultType="java.util.Map">
		select count(DISTINCT(upd.registUserId))userCount,count(os.id)ordersNum from productinfo_manage pm
		left join orders os on os.productInfoId = pm.id
		left join user_order uo on uo.orderId = os.id
		left join userapp_person_data upd on upd.registUserId = uo.registUserId
		where pm.merchantId = #{merchantId}
	</select>

	<!--===================================================-->
	<!--第二种查询方式，先查询所有的用户，分页查询-->
	<select id="selectUserByMerchantId2" parameterType="Long" resultType="com.ex.vo.OrderVo">
		select DISTINCT(upd.registUserId),upd.headUrl,upd.nickName from productinfo_manage pm
		left join orders os on os.productInfoId = pm.id
		left join user_order uo on uo.orderId = os.id
		left join userapp_person_data upd on upd.registUserId = uo.registUserId
		where pm.merchantId = #{merchantId}
		order by upd.registUserId
	</select>
	<!--查询用户的累计消费-->
	<select id="selectUserMoneyByMerchantId2" parameterType="java.util.Map" resultType="Double">
		select sum(os.orderMoney) from productinfo_manage pm
		left join orders os on os.productInfoId = pm.id
		left join user_order uo on uo.orderId = os.id
		left join userapp_person_data upd on upd.registUserId = uo.registUserId
		where pm.merchantId = #{merchantId} and uo.registUserId = #{registUserId}
		order by upd.registUserId
	</select>

	<!--某用户的待发货量总数-->
	<select id="selectUserOrdersCountByMerchantId2" parameterType="java.util.Map" resultType="Integer">
		select count(os.id) ordersNum from productinfo_manage pm
		left join orders os on os.productInfoId = pm.id
		left join user_order uo on uo.orderId = os.id
		left join userapp_person_data upd on upd.registUserId = uo.registUserId
		left join shipping_address sa on sa.id = os.addressId
		left join product_property_set pps on pps.id = os.productPropertyId
		where pm.merchantId = #{merchantId} and upd.registUserId = #{registUserId}
		and os.status in(0,2)
		order by upd.registUserId
	</select>
	 <!--查询用户的总数-->
	<select id="selectUserCountByMerchantId2" parameterType="Long" resultType="Integer">
		select count(DISTINCT(upd.registUserId))userCount from productinfo_manage pm
		left join orders os on os.productInfoId = pm.id
		left join user_order uo on uo.orderId = os.id
		left join userapp_person_data upd on upd.registUserId = uo.registUserId
		where pm.merchantId = #{merchantId}
		order by upd.registUserId
	</select>

	<!--点击查看代发货商品的详情-->
	<!--查询此用户在此商家的待发货的详情，分页查询-->
	<select id="selectUserOrdersByMerchantId2" parameterType="java.util.Map" resultType="com.ex.vo.OrderVo">
		select DISTINCT(upd.registUserId),os.*,sa.address,sa.phone,sa.realName,pm.productPicUrl,pps.typeName from productinfo_manage pm
		left join orders os on os.productInfoId = pm.id
		left join user_order uo on uo.orderId = os.id
		left join userapp_person_data upd on upd.registUserId = uo.registUserId
		left join shipping_address sa on sa.id = os.addressId
        left join product_property_set pps on pps.id = os.productPropertyId
		where pm.merchantId = #{merchantId} and upd.registUserId = #{registUserId}
		and os.status in(0,2)
		order by upd.registUserId
	</select>

	<!--修改orders表的状态-->
	<update id="updateOrdersStatusById" parameterType="map">
		UPDATE orders
		<set >
			<if test="status != null" >
				status = #{status},
			</if>
			<if test="orderId!=null">
				orderId = #{orderId},
			</if>
			<if test="payStatus!=null">
				payStatus = #{payStatus},
			</if>
			<if test="payWay!=null">
				payWay  = #{payWay},
			</if>
			<if test="payTime!=null">
				payTime  = #{payTime},
			</if>
			<if test="finishTime!=null">
				finishTime  = #{finishTime},
			</if>
			<if test="WuLiuNum!=null and WuLiuNum!=''">
				WuLiuNum = #{WuLiuNum},
			</if>
			<if test="updateTime != null" >
				updateTime = #{updateTime}
			</if>
		</set>
		WHERE id = #{id}
	</update>


	<!--添加订单-->
	<insert id="insertOrders" parameterType="com.ex.entity.Orders" useGeneratedKeys="true" keyProperty="id">
		insert into orders(orderNum,productNum,orderMoney,productInfoId,productPropertyId,addressId,createTime,PSWay,postage)
		values(#{orderNum},#{productNum},#{orderMoney},#{productInfoId},#{productPropertyId},#{addressId},#{createTime},#{PSWay},#{postage})
	</insert>

	<!--支付，根据订单id查询订单价格-->
	<select id="selectOrdersById" parameterType="com.ex.entity.Orders" resultType="com.ex.entity.Orders">
		select * from orders where id = #{id}
	</select>

	<!--查询用户是不是此商家的代理-->
	<select id="selectMerchantAgent" parameterType="Map" resultType="com.ex.entity.AgentMerchant">
		select * from agent_merchant where agentUserId = #{registUserId} and merchantId = #{merchantId} and status = 2
	</select>

	<!--查询商家的总销售单数-->
	<select id="selectMerchantOrderNums" parameterType="Long" resultType="Integer">
		select count(o.id) from orders o
		left join productinfo_manage pm on pm.id = o.productInfoId
		where pm.merchantId = #{mercantId}
	</select>
</mapper>